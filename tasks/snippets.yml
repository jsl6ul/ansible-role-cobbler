---
- name: "Create snippets directories {{ _snippet_type }}"
  ansible.builtin.file:
    path: "/var/lib/cobbler/snippets/{{ _snippet_type }}/{{ item.1.name }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop: "{{ _snippet_conf }}"
  loop_control:
    label: "Create directory /var/lib/cobbler/snippets/{{ _snippet_type }}/{{ item.1.name }}"

- name: "Copy snippets {{ _snippet_type }}"
  ansible.builtin.template:
    src: per_snippet.j2
    owner: root
    group: root
    mode: '0644'
    dest: "/var/lib/cobbler/snippets/{{ _snippet_type }}/{{ item.1.name }}/{{ item.0.name }}"
  loop: "{{ _snippet_conf }}"
  loop_control:
    label: "Install snippet /var/lib/cobbler/snippets/{{ _snippet_type }}/{{ item.1.name }}/{{ item.0.name }}"

- name: Remove unmanaged snippets
  when: cobbler_remove_unmanaged_snippets
  block:
    - name: "Define lists of managed snippets {{ _snippet_type }}"
      ansible.builtin.set_fact:
        _managed_snippets: "{{ (_managed_snippets | default([])) + ['/var/lib/cobbler/snippets/' + _snippet_type + '/' + item.1.name + '/' + item.0.name] }}"
      loop: "{{ _snippet_conf }}"
      loop_control:
        label: "Add /var/lib/cobbler/snippets/{{ _snippet_type }}/{{ item.1.name }}/{{ item.0.name }} to _managed_snippets"

    - name: "Find existing snippets {{ _snippet_type }}"
      ansible.builtin.find:
        paths: "/var/lib/cobbler/snippets/{{ _snippet_type }}/"
        file_type: file
        recurse: true
      register: _find_snippets

    - name: "Define list of existing snippets {{ _snippet_type }}"
      ansible.builtin.set_fact:
        _existing_snippets: "{{ _find_snippets | community.general.json_query('files[*].path') | flatten | unique }}"

    - name: "Remove unmanaged snippets {{ _snippet_type }}"
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: "{{ _existing_snippets }}"
      when: item not in _managed_snippets
